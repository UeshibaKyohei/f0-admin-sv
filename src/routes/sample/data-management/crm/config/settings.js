// CRM機能の設定ファイル
// AI駆動開発用: この設定でモック機能と本実装を切り替え

export const CRM_CONFIG = {
	// モック機能の制御
	MOCK_MODE: true, // false: 本実装, true: モック・デモ機能
	
	// デモ・サンプル機能の表示制御
	DEMO_FEATURES: {
		showToastDemo: true,        // トースト通知デモタブ
		showMockData: true,         // モックデータの使用
		showSampleActions: true,    // サンプルアクション（テストボタンなど）
		enableDragDrop: false,      // ドラッグ&ドロップ（未実装）
		showAIRecommendations: true // AI提案機能のモック表示
	},
	
	// データ設定
	DATA_SOURCE: {
		useLocalStorage: true,  // ローカルストレージの使用
		useMockAPI: true,       // モックAPIの使用
		apiBaseUrl: '/api/crm', // 本実装時のAPIベースURL
		autoGenerateData: true  // デモデータの自動生成
	},
	
	// UI設定
	UI_CONFIG: {
		itemsPerPage: 5,           // カンバンビューの初期表示件数
		activitiesPerPage: 10,     // 活動履歴の1ページあたり表示件数
		maxModalWidth: 'max-w-5xl', // モーダルの最大幅
		enableAnimations: true,     // アニメーション有効化
		compactMode: false          // コンパクト表示モード
	},
	
	// 営業プロセス設定（B2B営業版）
	BUSINESS_CONFIG: {
		dealStages: [
			{ id: 'qualification', name: '検証', color: 'bg-info' },
			{ id: 'needs_analysis', name: 'ニーズ分析', color: 'bg-warning' },
			{ id: 'proposal', name: '提案', color: 'bg-secondary' },
			{ id: 'negotiation', name: '交渉', color: 'bg-primary' },
			{ id: 'closed', name: 'クローズ', color: 'bg-success' }
		],
		defaultProbability: 20,     // 新規商談の初期確度
		renewalProbability: 80,     // 更新商談の初期確度
		relationshipThresholds: {   // 取引関係の閾値（日数）
			active: 30,
			normal: 90, 
			warning: 180
		}
	},
	
	// 表示用テキスト設定
	LABELS: {
		system: {
			title: 'CRM - 営業管理システム（B2B）',
			tabs: {
				dashboard: 'ダッシュボード',
				leads: 'リード管理',
				deals: '商談管理',
				customers: '顧客管理',
				activities: '活動履歴',
				emails: 'メール管理',
				analytics: '分析',
				toast: '通知デモ'
			}
		},
		stats: {
			newLeads: '新規リード',
			activeDeals: '進行中商談',
			totalCustomers: '顧客数',
			todayActivities: '本日の活動',
			totalRevenue: '総契約金額',
			avgDealSize: '平均案件規模',
			upsellOpportunities: 'アップセル機会'
		},
		relationship: {
			active: '活発',
			normal: '通常',
			warning: '要注意',
			dormant: '休眠'
		},
		actions: {
			startRenewal: '更新商談を開始',
			createSupport: 'サポートチケット作成',
			recordActivity: '活動記録',
			showDetail: '詳細'
		}
	},
	
	// 大口顧客の閾値設定
	THRESHOLDS: {
		upsellMinValue: 1000000,    // アップセル対象の最小契約金額（円）
		largeDealMin: 500000,       // 中規模案件の最小金額
		largeDealMax: 1000000       // 大規模案件の最小金額
	}
};

// RDB対応のデータベース設計 (Task3対応)
/* 
DATABASE_SCHEMA_NOTES:
主要テーブル設計案:

1. companies (企業マスター)
   - id (PK)
   - name (企業名)
   - industry (業界)
   - employee_count (従業員数)
   - created_at, updated_at

2. contacts (担当者マスター)
   - id (PK)
   - company_id (FK -> companies.id)
   - name (担当者名)
   - email, phone
   - position (役職)
   - is_decision_maker (決裁者フラグ)
   - created_at, updated_at

3. leads (リード)
   - id (PK)
   - company_id (FK -> companies.id)
   - contact_id (FK -> contacts.id)
   - source (獲得経路: web, exhibition, referral等)
   - status (new, qualified, converted, lost)
   - score (リードスコア)
   - assigned_to (担当営業ID)
   - created_at, updated_at

4. deals (商談)
   - id (PK)
   - company_id (FK -> companies.id)
   - contact_id (FK -> contacts.id)
   - lead_id (FK -> leads.id, nullable)
   - title (商談名)
   - stage (qualification, needs_analysis, proposal, negotiation, closed)
   - status (open, closed_won, closed_lost)
   - value (金額)
   - probability (確度%)
   - expected_close_date (想定クローズ日)
   - actual_close_date (実際のクローズ日)
   - assigned_to (担当営業ID)
   - deal_type (new, renewal, upsell, cross-sell)
   - created_at, updated_at

5. activities (活動履歴)
   - id (PK)
   - deal_id (FK -> deals.id, nullable)
   - company_id (FK -> companies.id)
   - contact_id (FK -> contacts.id, nullable)
   - type (call, email, meeting, note, proposal, contract)
   - title (活動タイトル)
   - description (詳細)
   - scheduled_at (予定日時)
   - completed_at (完了日時)
   - performed_by (実行者ID)
   - created_at, updated_at

6. users (営業担当者)
   - id (PK)
   - name (名前)
   - email
   - role (admin, manager, sales)
   - team_id (チームID)
   - is_active (有効フラグ)
   - created_at, updated_at

API設計案:
- GET /api/leads?status=new&assigned_to=123
- POST /api/deals
- PUT /api/deals/:id/stage
- GET /api/activities?company_id=456&limit=20
- POST /api/activities
*/

// 本実装への移行時の注意事項
/* 
PRODUCTION_MIGRATION_NOTES:
1. MOCK_MODE を false に変更
2. DATA_SOURCE.apiBaseUrl を実際のAPIエンドポイントに変更
3. DEMO_FEATURES の各項目を false に変更（必要に応じて）
4. 環境変数での設定切り替えを検討（開発/本番環境）
5. 上記DATABASE_SCHEMA_NOTESに基づいてRDBスキーマを作成
6. APIエンドポイントの実装
*/